<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
             http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--basename属性用于提供资源包的位置-->
        <!--classpath：msg表示资源包位于类路径中，并且名称模式遵循msg_{locale}.properties-->
        <beans:property name="basename" value="classpath:msg"/>
        <!--defaultEncoding属性用于定义用于消息的编码-->
        <beans:property name="defaultEncoding" value="UTF-8"/>
    </beans:bean>

    <!--
        CookieLocaleResolver用于解析 客户端请求中携带的关于区域信息(locale)的cookie信息，
        以便可以根据携带上来的locale识别用户区域信息(也就是使用的是什么语言),进而发送特定语言环境的页面响应.
        可以要求用户在第一次启动Web应用程序时选择语言环境，并且记录到cookie中，这样后续的请求中,
        我们可以根据cookie识别用户区域信息(语言).
    -->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <!-- 默认是中文,也就是默认会给浏览器设置Cookie: myAppLocaleCookie=zh_CN -->
        <beans:property name="defaultLocale" value="zh_CN"/>
        <!-- 可以打开浏览器,查看Cookie, 可以看到键值对: xzj_AppLocaleCookie=zh_CN-->
        <beans:property name="cookieName" value="xzj_AppLocaleCookie"></beans:property>
        <beans:property name="cookieMaxAge" value="3600"></beans:property>
    </beans:bean>

    <!--
        LocaleChangeInterceptor是一个拦截器,所要拦截的目标url的特点: url中携带了locale参数,比如:
        http://localhost:8080/login?locale=en_US, 如果url包含了locale参数,那么这个拦截器可以拿到locale,
        然后设置到ioc容器中的LocaleResolver中,也就是拦截器告诉LocaleResolver浏览器的区域信息(语言环境),
        相当于让上面的CookieLocaleResolver把浏览器端的Cookie中的myAppLocaleCookie对应的值改成对应的语言.
    -->
    <interceptors>
        <beans:bean
                class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <!-- url中的参数名称是可配置的，我们使用locale的请求参数名称作为“locale”:http://localhost:8080/login?locale=en_US -->
            <beans:property name="paramName" value="locale"/>
        </beans:bean>
    </interceptors>
</beans:beans>
