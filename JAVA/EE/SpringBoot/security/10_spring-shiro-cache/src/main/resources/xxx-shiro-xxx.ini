;[users]
;zhangsan=123,admin
;lisi=456,manager,seller
;wangwu=789,clerk
# -----------------------------------------------------------------------------
# 角色及其权限信息
# 预定权限：user:query
#          user:detail:query
#          user:update
#          user:delete
#          user:insert
#          order:update
#          ....
;[roles]
;# admin 拥有所有权限,用*表示
;admin=*
;# clerk 只有查询权限
;clerk=user:query,user:detail:query
;# manager 有 user 的所有权限
;manager="user:query,insert,update",order:query

# ----------------------------------------------
# 这些内容都会配置在xml中.
[main]
#没有身份认证时，跳转地址
shiro.loginUrl = /user/login
#角色或权限校验不通过时(也就是虽然通过了认证,但是没有权限访问资源)，跳转地址
shiro.unauthorizedUrl=/user/perms/error
#登出后的跳转地址,回首页
shiro.redirectUrl=/
# 声明密码比对器  密文转换
credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
# 声明加密算法
credentialsMatcher.hashAlgorithmName=sha-256
# 声明迭代次数
credentialsMatcher.hashIterations=10000
#true=hex格式  false=base64格式
credentialsMatcher.storedCredentialsHexEncoded=false
#声明自定义的Realm
realm04=com.qianfeng.realm.MyRealm
# 将密码比对器 注册在Realm中
realm04.credentialsMatcher=$credentialsMatcher
#将自定义的Realm注册给 核心控制者：Securitymanager
securityManager.realms=$realm04

[urls]
/user/all = authc,perms["user:query2"]
/user/logout = logout
#/user/login/page = anon
#/user/login/logic = anon
#/user/query = authc
#/user/update = authc,roles["manager","seller"]
#/user/delete = authc, perms["user:update","user:delete"]
#/user/logout = logout